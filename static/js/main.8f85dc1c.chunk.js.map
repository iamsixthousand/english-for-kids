{"version":3,"sources":["components/InteractiveBlock/InteractiveBlock.tsx","components/Cardholder/CardHolder.tsx","components/MainPage/MainPage.tsx","components/Header/Header.tsx","components/cardData.ts","components/SideBar/SideBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InteractiveBlock","isPlaying","id","className","CardHolder","MainPage","idParam","useParams","isItemCard","Header","sideBarToggle","setModeToggle","role","onClick","categories","SideBar","cbToggle","style","width","display","flexDirection","justifyContent","type","to","map","elem","i","App","useState","isPlayingToggle","sideBarVisible","changeSideBarVisibility","setMode","cb","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAIaA,EAAoD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC7E,OACE,sBAAKC,UAAU,mBAAf,UACGF,EACAC,MCJME,G,MAAwC,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,UACtD,OAAO,qBAAKE,UAAU,aAAf,SAA6BF,MCEzBI,G,MAAoC,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAC5CK,EAAUC,cAEhB,OACE,sBAAKJ,UAAU,WAAf,UACE,cAAC,EAAD,CAAkBF,UAAWA,EAAWC,GAAII,EAAQJ,KACpD,cAAC,EAAD,CAAYD,UAAWA,EAAWO,YAAY,EAAON,GAAII,EAAQJ,UCT1DO,G,MAAgC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAC7D,OACE,sBAAKR,UAAU,SAAf,UACE,qBAAKS,KAAK,SAAST,UAAU,oBAAoBU,QAASH,EAAe,cAAY,OAArF,iBAGA,qBAAKE,KAAK,SAAST,UAAU,eAAeU,QAASF,EAAe,cAAY,OAAhF,uBCVOG,EAAa,CACxB,iBACA,iBACA,iBACA,iBACA,UACA,YCAWC,G,MAAkC,SAAC,GAA6B,IAA3Bd,EAA0B,EAA1BA,UAAWe,EAAe,EAAfA,SAC3D,OACE,qBAAKb,UAAU,mBAAf,SACE,+BACE,qBACEc,MAAO,CAAEC,MAAO,OAAQC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,OADjF,SAGE,wBACEC,KAAK,SACLnB,UAAS,UAAKF,EAAY,6BAA+B,yBACzDY,QAASG,EAHX,SAKG,WAGL,6BACE,cAAC,IAAD,CAASO,GAAG,IAAIpB,UAAS,UAAKF,EAAY,uBAAyB,mBAAnE,yBAKDa,EAAWU,KAAI,SAACC,EAAMC,GACrB,OACE,6BACE,cAAC,IAAD,CACEH,GAAE,oBAAeG,EAAI,GACrBvB,UAAS,UAAKF,EAAY,uBAAyB,mBAFrD,SAIGwB,gBCJFE,G,MArBO,WACpB,MAAqCC,oBAAkB,GAAvD,mBAAO3B,EAAP,KAAkB4B,EAAlB,KACA,EAAkDD,oBAAkB,GAApE,mBAAOE,EAAP,KAAuBC,EAAvB,KAEMrB,EAAgB,kBAAMqB,GAAyBD,IAC/CE,EAAU,kBAAMH,GAAiB5B,IAEvC,OACE,cAAC,IAAD,UACE,sBAAKE,UAAU,MAAf,UACE,qBAAKA,UAAS,UAAK2B,EAAiB,iBAAmB,WAAvD,SACE,cAAC,EAAD,CAAS7B,UAAWA,EAAWe,SAAUN,MAE3C,cAAC,EAAD,CAAQuB,GAAID,EAAStB,cAAeA,EAAeC,cAAeqB,IAClE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,cAAC,IAAD,CAAO8B,KAAK,gBAAgBC,UAAW/B,WCVhCgC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f85dc1c.chunk.js","sourcesContent":["import React from 'react';\nimport { InteractiveBlockProps } from '../../interfaces/interfaces';\nimport './InteractiveBlock.css';\n\nexport const InteractiveBlock: React.FC<InteractiveBlockProps> = ({ isPlaying, id }) => {\n  return (\n    <div className=\"InteractiveBlock\">\n      {isPlaying}\n      {id}\n    </div>\n  );\n};\n","import React from 'react';\nimport { CardHolderProps } from '../../interfaces/interfaces';\nimport './CardHolder.css';\n\nexport const CardHolder: React.FC<CardHolderProps> = ({ isPlaying }) => {\n  return <div className=\"CardHolder\">{isPlaying}</div>;\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { InteractiveBlock } from '../InteractiveBlock/InteractiveBlock';\nimport { CardHolder } from '../Cardholder/CardHolder';\nimport { MainPageProps, MatchParams } from '../../interfaces/interfaces';\nimport './MainPage.css';\n\nexport const MainPage: React.FC<MainPageProps> = ({ isPlaying }) => {\n  const idParam = useParams<MatchParams>();\n\n  return (\n    <div className=\"MainPage\">\n      <InteractiveBlock isPlaying={isPlaying} id={idParam.id} />\n      <CardHolder isPlaying={isPlaying} isItemCard={false} id={idParam.id} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { HeaderProps } from '../../interfaces/interfaces';\nimport './Header.css';\n\nexport const Header: React.FC<HeaderProps> = ({ sideBarToggle, setModeToggle }) => {\n  return (\n    <div className=\"Header\">\n      <div role=\"button\" className=\"SideBarOpenButton\" onClick={sideBarToggle} aria-hidden=\"true\">\n        |||\n      </div>\n      <div role=\"button\" className=\"ModeSelector\" onClick={setModeToggle} aria-hidden=\"true\">\n        MODE\n      </div>\n    </div>\n  );\n};\n","export const categories = [\n  'Action (set A)',\n  'Action (set B)',\n  'Animal (set A)',\n  'Animal (set B)',\n  'Clothes',\n  'Emotions',\n];\n\nexport const cards = [\n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3',\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3',\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3',\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3',\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3',\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3',\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3',\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3',\n    },\n  ],\n  [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3',\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3',\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3',\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3',\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3',\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3',\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3',\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3',\n    },\n  ],\n  [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3',\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3',\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3',\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3',\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3',\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3',\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3',\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3',\n    },\n  ],\n  [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3',\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3',\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3',\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3',\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3',\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3',\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3',\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3',\n    },\n  ],\n  [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3',\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3',\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3',\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3',\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3',\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3',\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3',\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3',\n    },\n  ],\n  [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3',\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3',\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3',\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3',\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3',\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3',\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3',\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3',\n    },\n  ],\n];\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { categories } from '../cardData';\nimport { SideBarProps } from '../../interfaces/interfaces';\nimport './SideBar.css';\n\nexport const SideBar: React.FC<SideBarProps> = ({ isPlaying, cbToggle }) => {\n  return (\n    <div className=\"SideBarContainer\">\n      <ul>\n        <div\n          style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'end' }}\n        >\n          <button\n            type=\"button\"\n            className={`${isPlaying ? 'SideBarMenuItem close play' : 'SideBarMenuItem close'}`}\n            onClick={cbToggle}\n          >\n            {'\\u0086'}\n          </button>\n        </div>\n        <li>\n          <NavLink to=\"/\" className={`${isPlaying ? 'SideBarMenuItem play' : 'SideBarMenuItem'}`}>\n            Main Page\n          </NavLink>\n        </li>\n\n        {categories.map((elem, i) => {\n          return (\n            <li>\n              <NavLink\n                to={`/category/${i + 1}`} // +1 cause of array starts on index 0\n                className={`${isPlaying ? 'SideBarMenuItem play' : 'SideBarMenuItem'}`}\n              >\n                {elem}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MainPage } from './components/MainPage/MainPage';\nimport { Header } from './components/Header/Header';\nimport { SideBar } from './components/SideBar/SideBar';\nimport './App.css';\n\nimport './components/SideBar/SideBar.css';\n\nconst App: React.FC = () => {\n  const [isPlaying, isPlayingToggle] = useState<boolean>(false);\n  const [sideBarVisible, changeSideBarVisibility] = useState<boolean>(false);\n\n  const sideBarToggle = () => changeSideBarVisibility(!sideBarVisible);\n  const setMode = () => isPlayingToggle(!isPlaying);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className={`${sideBarVisible ? 'SideBar active' : 'SideBar'}`}>\n          <SideBar isPlaying={isPlaying} cbToggle={sideBarToggle} />\n        </div>\n        <Header cb={setMode} sideBarToggle={sideBarToggle} setModeToggle={setMode} />\n        <Route exact path=\"/\" component={MainPage} />\n        <Route path=\"/category/:id\" component={MainPage} />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}