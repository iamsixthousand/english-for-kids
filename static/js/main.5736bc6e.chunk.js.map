{"version":3,"sources":["components/PageInfoBlock/PageInfoBlock.tsx","components/Card/CategoryCard/CategoryCard.tsx","components/Card/ItemCard/ItemCard.tsx","cardData.ts","components/Cardholder/CardHolder.tsx","components/StatsBlock/StatsBlock.tsx","functions/helperFunctions.ts","components/MainPage/MainPage.tsx","components/Header/Header.tsx","components/SideBar/SideBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageInfoBlock","textSeen","otherText","isPlaying","id","undefined","gameStartedToggle","className","type","onClick","CategoryCard","title","image","alt","src","process","ItemCard","word","translation","audio","inGameAnswer","isGameStarted","useState","isFlipped","setIsFlipped","PUBLIC_URL","audioPlay","Audio","play","flipOnMouseLeaveOrClick","onMouseLeave","role","tabIndex","onKeyDown","style","border","backgroundColor","categories","cards","audioSrc","CardHolder","gameStepsFunc","map","elem","i","to","Number","StatsBlock","answersArrS","el","randomizerFunc","Math","random","MainPage","answers","setAnswer","idParam","useParams","cardsArrS","useRef","cardIndex","startGameFunc","current","slice","sort","EO","stopPropagation","target","dataset","push","prevAnswers","length","console","log","setTimeout","Header","sideBarToggle","setModeToggle","checked","toggleCheck","onHandleColor","onColor","uncheckedIcon","checkedIcon","onChange","height","width","handleDiameter","boxShadow","activeBoxShadow","SideBar","cbToggle","display","flexDirection","justifyContent","App","isPlayingToggle","sideBarVisible","changeSideBarVisibility","setIsGameStarted","basename","backgroundImage","backgroundRepeat","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5736bc6e.chunk.js","sourcesContent":["import React from 'react';\nimport { PageInfoBlockProps } from '../../interfaces/interfaces';\nimport './PageInfoBlock.scss';\n\nexport const PageInfoBlock: React.FC<PageInfoBlockProps> = ({\n  isPlaying,\n  id = undefined,\n  gameStartedToggle,\n}) => {\n  let textSeen: string;\n  let otherText: string;\n\n  switch (id) {\n    case '1':\n      textSeen = 'Action (Set A)';\n      break;\n    case '2':\n      textSeen = 'Action (Set B)';\n      break;\n    case '3':\n      textSeen = 'Animal (Set A)';\n      break;\n    case '4':\n      textSeen = 'Animal (Set B)';\n      break;\n    case '5':\n      textSeen = 'Clothes';\n      break;\n    case '6':\n      textSeen = 'Emotions';\n      break;\n    default:\n      textSeen = '';\n      break;\n  }\n\n  switch (isPlaying) {\n    case true:\n      otherText = 'Now show your skills!';\n      break;\n    default:\n      otherText = 'Feel free to practice!';\n  }\n\n  return (\n    <div className=\"InteractiveBlock\">\n      <div>\n        {isPlaying}\n        <div className=\"InteractiveBox\">\n          {id === undefined && <h1>Hello friend! Let&apos;s learn english together.</h1>}\n        </div>\n        <div className=\"InteractiveBox mini\">{id === undefined && <h2>Choose a category!</h2>}</div>\n        <div className={id ? 'InteractiveBox' : 'InteractiveBox mini'}>\n          <h1>{id !== undefined && `${textSeen} category. ${otherText}`}</h1>\n        </div>\n      </div>\n      <div className=\"ButtonContainer\">\n        {isPlaying && id !== undefined && (\n          <button type=\"button\" className=\"StartGameButton\" onClick={gameStartedToggle}>\n            start!\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CategoryCardProps } from '../../../interfaces/interfaces';\nimport './CategoryCard.scss';\n\nexport const CategoryCard: React.FC<CategoryCardProps> = ({ isPlaying, title, image }) => {\n  const { PUBLIC_URL } = process.env;\n  return (\n    <div className=\"CategoryCard\">\n      {isPlaying}\n      <div className=\"CardImageContainer\">\n        <img className=\"CardImage\" alt={title} src={`${PUBLIC_URL}/${image}`} />\n      </div>\n      <div className=\"CategoryText\">{title}</div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { ItemCardProps } from '../../../interfaces/interfaces';\nimport './ItemCard.scss';\n\nexport const ItemCard: React.FC<ItemCardProps> = ({\n  isPlaying,\n  word,\n  translation,\n  audio,\n  image,\n  inGameAnswer,\n  isGameStarted,\n}) => {\n  const [isFlipped, setIsFlipped] = useState<boolean>(false);\n  const { PUBLIC_URL } = process.env;\n  const audioPlay = () => {\n    if (!isPlaying) new Audio(`${PUBLIC_URL}/${audio}`).play();\n  };\n  const cardFlipper = () => {\n    new Audio(`${PUBLIC_URL}/audio/cardflip.mp3`).play();\n    setIsFlipped(!isFlipped);\n  };\n  const flipOnMouseLeaveOrClick = () => {\n    if (isFlipped === true) setIsFlipped(false);\n  };\n\n  return (\n    <div data-role=\"Mask\" onMouseLeave={flipOnMouseLeaveOrClick}>\n      <div className={!isFlipped ? 'CardContainer' : 'CardContainer flipped'}>\n        <div className=\"ItemCard front\">\n          <div\n            role=\"button\"\n            className={!isPlaying ? 'CardImageContainer' : 'CardImageContainer play'}\n            tabIndex={0}\n            data-word={word}\n            onKeyDown={audioPlay}\n            onClick={!isGameStarted ? audioPlay : inGameAnswer}\n          >\n            <img className=\"CardImage\" alt={word} src={`${PUBLIC_URL}/${image}`} />\n          </div>\n          {!isPlaying && (\n            <div className=\"CardControlPanel\">\n              <button\n                style={{ border: 'none', backgroundColor: 'rgb(248, 241, 241)' }}\n                type=\"button\"\n                onClick={audioPlay}\n              >\n                <img\n                  className=\"ControlPanelPlayButton\"\n                  alt=\"play-sound\"\n                  src={`${PUBLIC_URL}/play-button.png`}\n                />\n              </button>\n              <span className=\"ControlPanelText\">{word}</span>\n              <button\n                style={{ border: 'none', backgroundColor: 'rgb(248, 241, 241)' }}\n                type=\"button\"\n                onClick={cardFlipper}\n              >\n                <img\n                  className=\"ControlPanelEyeButton\"\n                  alt=\"watch-translation\"\n                  src={`${PUBLIC_URL}/eye-button.png`}\n                />\n              </button>\n            </div>\n          )}\n        </div>\n        <div className=\"ItemCard back\">\n          <div\n            role=\"button\"\n            className=\"CardImageContainer\"\n            tabIndex={0}\n            onKeyDown={flipOnMouseLeaveOrClick}\n            onClick={flipOnMouseLeaveOrClick}\n          >\n            <img className=\"CardImage\" alt={word} src={`${PUBLIC_URL}/${image}`} />\n          </div>\n          {!isPlaying && (\n            <div className=\"CardControlPanel flipped\">\n              <span className=\"ControlPanelText\">{translation}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","interface Categories {\n  title: string;\n  image: string;\n}\n\ninterface Card {\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\ntype Cards = Card[];\n\nexport const categories: Categories[] = [\n  {\n    title: 'Action (set A)',\n    image: 'img/action-set-a.jpg',\n  },\n  {\n    title: 'Action (set B)',\n    image: 'img/action-set-b.jpg',\n  },\n  {\n    title: 'Animal (set A)',\n    image: 'img/animal-set-a.jpg',\n  },\n  {\n    title: 'Animal (set B)',\n    image: 'img/animal-set-b.jpg',\n  },\n  {\n    title: 'Clothes',\n    image: 'img/clothes.jpg',\n  },\n  {\n    title: 'Emotions',\n    image: 'img/emotions.jpg',\n  },\n];\n\nexport const cards: Cards[] = [\n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3',\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3',\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3',\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3',\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3',\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3',\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3',\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3',\n    },\n  ],\n  [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3',\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3',\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3',\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3',\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3',\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3',\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3',\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3',\n    },\n  ],\n  [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3',\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3',\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3',\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3',\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3',\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3',\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3',\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3',\n    },\n  ],\n  [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3',\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3',\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3',\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3',\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3',\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3',\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3',\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3',\n    },\n  ],\n  [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3',\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3',\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3',\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3',\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3',\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3',\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3',\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3',\n    },\n  ],\n  [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3',\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3',\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3',\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3',\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3',\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3',\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3',\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3',\n    },\n  ],\n];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CategoryCard } from '../Card/CategoryCard/CategoryCard';\nimport { ItemCard } from '../Card/ItemCard/ItemCard';\nimport { CardHolderProps } from '../../interfaces/interfaces';\nimport { categories, cards } from '../../cardData';\nimport './CardHolder.scss';\n\nexport const CardHolder: React.FC<CardHolderProps> = ({\n  isPlaying,\n  id,\n  isGameStarted,\n  gameStepsFunc,\n}) => {\n  return (\n    <div className={!id ? 'CardHolder' : 'CardHolder word'}>\n      {!id &&\n        categories.map((elem, i) => {\n          return (\n            <div className=\"Card\" key={elem.title}>\n              <Link to={`category/${i + 1}`} className=\"Link\">\n                <CategoryCard isPlaying={isPlaying} title={elem.title} image={elem.image} />\n              </Link>\n            </div>\n          );\n        })}\n      {id &&\n        cards[Number(id) - 1].map((elem) => {\n          return (\n            <ItemCard\n              inGameAnswer={gameStepsFunc}\n              isPlaying={isPlaying}\n              word={elem.word}\n              translation={elem.translation}\n              image={elem.image}\n              audio={elem.audioSrc}\n              key={elem.word}\n              isGameStarted={isGameStarted}\n            />\n          );\n        })}\n    </div>\n  );\n};\n","import React from 'react';\nimport { StatsBlockProps } from '../../interfaces/interfaces';\nimport './StatsBlock.scss';\n\nexport const StatsBlock: React.FC<StatsBlockProps> = ({ answersArrS, isGameStarted, id }) => {\n  const { PUBLIC_URL } = process.env;\n\n  return (\n    <div className={isGameStarted && id ? 'StatsBlock game' : 'StatsBlock'}>\n      <div className={isGameStarted && id ? 'TextStatsBlock game' : 'TextStatsBlock'}>\n        <span>ANSWERS:</span>\n      </div>\n      {answersArrS.map((el, i) => {\n        return (\n          <div className=\"IconContainer\">\n            <img\n              className=\"Icon\"\n              alt={`icon${i}`}\n              src={`${PUBLIC_URL}/img/${el === true ? 'correct.png' : 'wrong.png'}`}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","export const randomizerFunc = () => Math.random() - 0.5;\n// to randomize sort method\nexport const toArrayId = (id: string) => Number(id) - 1;\n// to give useParam id a number value and decrease by 1 to match an array index\n","import React, { useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PageInfoBlock } from '../PageInfoBlock/PageInfoBlock';\nimport { CardHolder } from '../Cardholder/CardHolder';\nimport { StatsBlock } from '../StatsBlock/StatsBlock';\nimport { cards } from '../../cardData';\nimport { randomizerFunc, toArrayId } from '../../functions/helperFunctions';\nimport { MainPageProps, MatchParams, WordCard } from '../../interfaces/interfaces';\nimport './MainPage.scss';\n\nexport const MainPage: React.FC<MainPageProps> = ({\n  isPlaying,\n  isGameStarted,\n  gameStartedToggle,\n}) => {\n  const [answers, setAnswer] = useState<boolean[]>([]);\n  const idParam = useParams<MatchParams>();\n  const cardsArrS = useRef<WordCard[]>([]);\n  const answersArrS = useRef<boolean[]>([]);\n  const cardIndex = useRef<number>(0);\n  const { PUBLIC_URL } = process.env;\n\n  const resultScreenShow = () => {\n    console.log('aaaaa');\n  };\n\n  const gameStepsFunc = (EO?: React.MouseEvent) => {\n    if (EO) EO.stopPropagation();\n    if ((EO?.target as HTMLDivElement).dataset.word === cardsArrS.current[cardIndex.current].word) {\n      new Audio(`${PUBLIC_URL}/audio/correct.mp3`).play();\n      answersArrS.current.push(true);\n      setAnswer((prevAnswers) => [...prevAnswers, true]);\n      cardIndex.current += 1;\n      if (cardsArrS.current.length >= cardIndex.current + 1)\n        new Audio(`${PUBLIC_URL}/${cardsArrS.current[cardIndex.current].audioSrc}`).play();\n      else resultScreenShow();\n    } else {\n      new Audio(`${PUBLIC_URL}/audio/error.mp3`).play();\n      answersArrS.current.push(false);\n      setAnswer((prevAnswers) => [...prevAnswers, false]);\n      setTimeout(() =>\n        new Audio(`${PUBLIC_URL}/${cardsArrS.current[cardIndex.current].audioSrc}`).play()\n      );\n    }\n  };\n\n  const startGameFunc = () => {\n    cardsArrS.current = cards[toArrayId(idParam.id)].slice().sort(randomizerFunc);\n    if (cardsArrS)\n      new Audio(`${PUBLIC_URL}/${cardsArrS.current[cardIndex.current].audioSrc}`).play();\n  };\n\n  const newGameFunc = () => {\n    gameStartedToggle();\n    answersArrS.current = [];\n    cardsArrS.current = [];\n    startGameFunc();\n  };\n\n  return (\n    <div className=\"MainPage\">\n      <PageInfoBlock isPlaying={isPlaying} id={idParam.id} gameStartedToggle={newGameFunc} />\n      <CardHolder\n        isPlaying={isPlaying}\n        id={idParam.id}\n        isGameStarted={isGameStarted}\n        gameStepsFunc={gameStepsFunc}\n      />\n      {isPlaying && (\n        <StatsBlock\n          answersArrS={answers}\n          isPlaying={isPlaying}\n          isGameStarted={isGameStarted}\n          id={idParam.id}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport Switch from 'react-switch';\nimport { HeaderProps } from '../../interfaces/interfaces';\nimport './Header.scss';\n\nexport const Header: React.FC<HeaderProps> = ({ sideBarToggle, setModeToggle }) => {\n  const [checked, toggleCheck] = useState(false);\n  const checkToggle = () => {\n    setModeToggle();\n    toggleCheck(!checked);\n  };\n  return (\n    <div className=\"Header\">\n      <div role=\"button\" className=\"SideBarOpenButton\" onClick={sideBarToggle} aria-hidden=\"true\">\n        |||\n      </div>\n      <div className=\"ModeSelector\">\n        <span className=\"ModeText\">{checked ? 'PLAY' : 'TRAIN'}</span>\n        <Switch\n          onHandleColor=\"#FFFFFF\"\n          onColor=\"#99AE99\"\n          uncheckedIcon={false}\n          checkedIcon={false}\n          checked={checked}\n          className=\"Switch\"\n          onChange={checkToggle}\n          height={20}\n          width={48}\n          handleDiameter={18}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.2)\"\n          activeBoxShadow=\"0px 0px 1px 5px rgba(0, 52, 0, 0.4)\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { categories } from '../../cardData';\nimport { SideBarProps } from '../../interfaces/interfaces';\nimport './SideBar.scss';\n\nexport const SideBar: React.FC<SideBarProps> = ({ isPlaying, cbToggle }) => {\n  return (\n    <div className=\"SideBarContainer\">\n      <ul>\n        <div\n          style={{ width: '100%', display: 'flex', flexDirection: 'row', justifyContent: 'end' }}\n        >\n          <button\n            type=\"button\"\n            className={`${isPlaying ? 'SideBarMenuItem close play' : 'SideBarMenuItem close'}`}\n            onClick={cbToggle}\n          >\n            &#9668;\n          </button>\n        </div>\n        <li>\n          <NavLink\n            to=\"/\"\n            onClick={cbToggle}\n            className={`${isPlaying ? 'SideBarMenuItem play' : 'SideBarMenuItem'}`}\n          >\n            Main Page\n          </NavLink>\n        </li>\n\n        {categories.map((elem, i) => {\n          return (\n            <li key={elem.title}>\n              <NavLink\n                to={`/category/${i + 1}`} // +1 cause of array starts on index 0\n                onClick={cbToggle}\n                className={`${isPlaying ? 'SideBarMenuItem play' : 'SideBarMenuItem'}`}\n              >\n                {elem.title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MainPage } from './components/MainPage/MainPage';\nimport { Header } from './components/Header/Header';\nimport { SideBar } from './components/SideBar/SideBar';\nimport './App.scss';\nimport './components/SideBar/SideBar.scss';\n\nconst App: React.FC = () => {\n  const [isPlaying, isPlayingToggle] = useState<boolean>(false);\n  const [sideBarVisible, changeSideBarVisibility] = useState<boolean>(false);\n  const [isGameStarted, setIsGameStarted] = useState<boolean>(false);\n  const { PUBLIC_URL } = process.env;\n\n  const sideBarToggle = () => changeSideBarVisibility(!sideBarVisible);\n  const setMode = () => {\n    isPlayingToggle(!isPlaying);\n    if (isGameStarted === true) setIsGameStarted(false);\n  };\n  const gameStartedToggle = () => setIsGameStarted(!isGameStarted);\n\n  return (\n    <BrowserRouter basename={PUBLIC_URL}>\n      <div\n        className=\"App\"\n        style={{\n          backgroundImage: `url(${PUBLIC_URL}/background.jpg`,\n          backgroundRepeat: 'repeat',\n        }}\n      >\n        <header>\n          <div className={`${sideBarVisible ? 'SideBar active' : 'SideBar'}`}>\n            <SideBar isPlaying={isPlaying} cbToggle={sideBarToggle} />\n          </div>\n          <Header sideBarToggle={sideBarToggle} setModeToggle={setMode} />\n        </header>\n        <main>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <MainPage\n                isPlaying={isPlaying}\n                isGameStarted={isGameStarted}\n                gameStartedToggle={gameStartedToggle}\n              />\n            )}\n          />\n          <Route\n            path=\"/category/:id\"\n            render={() => (\n              <MainPage\n                isPlaying={isPlaying}\n                isGameStarted={isGameStarted}\n                gameStartedToggle={gameStartedToggle}\n              />\n            )}\n          />\n        </main>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}