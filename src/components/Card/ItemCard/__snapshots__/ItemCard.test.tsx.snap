// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemCard component: matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-role="Mask"
      >
        <div
          class="CardContainer"
        >
          <div
            class="ItemCard front"
          >
            <div
              class="CardImageContainer"
              data-word="cry"
              role="button"
              tabindex="0"
            >
              <img
                alt="cry"
                class="CardImage"
                src="/img/cry.jpg"
              />
            </div>
            <div
              class="CardControlPanel"
            >
              <button
                style="background-color: rgb(248, 241, 241);"
                type="button"
              >
                <img
                  alt="play-sound"
                  class="ControlPanelPlayButton"
                  src="/play-button.png"
                />
              </button>
              <span
                class="ControlPanelText"
              >
                cry
              </span>
              <button
                style="background-color: rgb(248, 241, 241);"
                type="button"
              >
                <img
                  alt="watch-translation"
                  class="ControlPanelEyeButton"
                  src="/eye-button.png"
                />
              </button>
            </div>
          </div>
          <div
            class="ItemCard back"
          >
            <div
              class="CardImageContainer"
              role="button"
              tabindex="0"
            >
              <img
                alt="cry"
                class="CardImage"
                src="/img/cry.jpg"
              />
            </div>
            <div
              class="CardControlPanel flipped"
            >
              <span
                class="ControlPanelText"
              >
                плакать
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-role="Mask"
    >
      <div
        class="CardContainer"
      >
        <div
          class="ItemCard front"
        >
          <div
            class="CardImageContainer"
            data-word="cry"
            role="button"
            tabindex="0"
          >
            <img
              alt="cry"
              class="CardImage"
              src="/img/cry.jpg"
            />
          </div>
          <div
            class="CardControlPanel"
          >
            <button
              style="background-color: rgb(248, 241, 241);"
              type="button"
            >
              <img
                alt="play-sound"
                class="ControlPanelPlayButton"
                src="/play-button.png"
              />
            </button>
            <span
              class="ControlPanelText"
            >
              cry
            </span>
            <button
              style="background-color: rgb(248, 241, 241);"
              type="button"
            >
              <img
                alt="watch-translation"
                class="ControlPanelEyeButton"
                src="/eye-button.png"
              />
            </button>
          </div>
        </div>
        <div
          class="ItemCard back"
        >
          <div
            class="CardImageContainer"
            role="button"
            tabindex="0"
          >
            <img
              alt="cry"
              class="CardImage"
              src="/img/cry.jpg"
            />
          </div>
          <div
            class="CardControlPanel flipped"
          >
            <span
              class="ControlPanelText"
            >
              плакать
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
